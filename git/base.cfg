[user]
    name = Neo
    email = public@neoi.sh

[core]
    excludesfile = ~/.global-gitignore
    whitespace = space-before-tab,indent-with-non-tab,trailing-space
    hooksPath = ~/.githooks

[alias]
    a = add
    s = status -s
    pt = push --tags
    po = push origin
    p = !"git pull; git submodule foreach git pull origin main"
    nah = !"git reset --hard; git clean -df"
    ca = !"git add -A; git commit -av"
    cm = !"git add -A; git commit -m"
    cma = "!cma() { git add \"$1\"; git commit -m \"$2\"; }; cma"
    go = checkout -B
    tags = tag -l
    branches = branch -a
    remotes = remote -v
    i = !"git init && git add . && git commit -m 'Initial commit.'"
    l = log --pretty=oneline -n 20 --graph --abbrev-commit
    c = clone --recursive
    d = !"git diff-index --quiet HEAD -- || clear; git diff --patch-with-stat"
    di = !"d() { git diff --patch-with-stat HEAD~$1; }; git diff-index --quiet HEAD -- || clear; d"
    ru = config --get remote.origin.url
    sru = remote set-url origin

[branch "main"]
    remote = origin
    merge = refs/heads/main

[branch "develop"]
    remote = origin
    merge = refs/heads/develop

[apply]
    whitespace = fix

[color]
    ui = auto

[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green

[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red bold
    new = green bold

[color "status"]
    added = yellow
    changed = green
    untracked = cyan

[merge]
    log = true

# URL shorthands: usage `git clone gh:username/repo.git`
[url "git@github.com:"]
    insteadOf = "gh:"
    pushInsteadOf = "gh:"

# URL shorthands: usage `git clone gh:username/repo.git`
[url "git://github.com/"]
    insteadOf = "gh:"
    pushInsteadOf = "gh:"

[push]
    default = matching

[init]
    defaultBranch = main

[includeIf "gitdir:~/.gitconfig.extended"]
    path = ~/.gitconfig.extended

[includeIf "gitdir:~/.gitconfig.private"]
    path = ~/.gitconfig.private
